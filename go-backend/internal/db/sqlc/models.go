// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Chapter struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	ProjectID pgtype.UUID        `db:"project_id" json:"project_id"`
	Type      string             `db:"type" json:"type"`
	Title     string             `db:"title" json:"title"`
	Content   pgtype.Text        `db:"content" json:"content"`
	WordCount pgtype.Int4        `db:"word_count" json:"word_count"`
	Status    pgtype.Text        `db:"status" json:"status"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type GeneratedDocument struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	ProjectID pgtype.UUID        `db:"project_id" json:"project_id"`
	FileName  string             `db:"file_name" json:"file_name"`
	FilePath  string             `db:"file_path" json:"file_path"`
	FileSize  pgtype.Int8        `db:"file_size" json:"file_size"`
	MimeType  pgtype.Text        `db:"mime_type" json:"mime_type"`
	Status    pgtype.Text        `db:"status" json:"status"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type Reference struct {
	ID                pgtype.UUID        `db:"id" json:"id"`
	ProjectID         pgtype.UUID        `db:"project_id" json:"project_id"`
	Title             string             `db:"title" json:"title"`
	Authors           pgtype.Text        `db:"authors" json:"authors"`
	Journal           pgtype.Text        `db:"journal" json:"journal"`
	PublicationYear   pgtype.Int4        `db:"publication_year" json:"publication_year"`
	Url               pgtype.Text        `db:"url" json:"url"`
	CitationApa       pgtype.Text        `db:"citation_apa" json:"citation_apa"`
	CitationMla       pgtype.Text        `db:"citation_mla" json:"citation_mla"`
	CreatedAt         pgtype.Timestamptz `db:"created_at" json:"created_at"`
	Doi               pgtype.Text        `db:"doi" json:"doi"`
	SemanticScholarID pgtype.Text        `db:"semantic_scholar_id" json:"semantic_scholar_id"`
	Abstract          pgtype.Text        `db:"abstract" json:"abstract"`
	SourceApi         pgtype.Text        `db:"source_api" json:"source_api"`
}

type ResearchProject struct {
	ID             pgtype.UUID        `db:"id" json:"id"`
	UserID         pgtype.UUID        `db:"user_id" json:"user_id"`
	Title          string             `db:"title" json:"title"`
	Specialization string             `db:"specialization" json:"specialization"`
	University     pgtype.Text        `db:"university" json:"university"`
	Description    pgtype.Text        `db:"description" json:"description"`
	Status         pgtype.Text        `db:"status" json:"status"`
	CreatedAt      pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type Session struct {
	ID           pgtype.UUID        `db:"id" json:"id"`
	UserID       pgtype.UUID        `db:"user_id" json:"user_id"`
	RefreshToken string             `db:"refresh_token" json:"refresh_token"`
	UserAgent    pgtype.Text        `db:"user_agent" json:"user_agent"`
	ClientIp     pgtype.Text        `db:"client_ip" json:"client_ip"`
	IsBlocked    pgtype.Bool        `db:"is_blocked" json:"is_blocked"`
	ExpiresAt    pgtype.Timestamptz `db:"expires_at" json:"expires_at"`
	CreatedAt    pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type User struct {
	ID           pgtype.UUID        `db:"id" json:"id"`
	Email        string             `db:"email" json:"email"`
	PasswordHash string             `db:"password_hash" json:"password_hash"`
	FirstName    string             `db:"first_name" json:"first_name"`
	LastName     string             `db:"last_name" json:"last_name"`
	IsVerified   pgtype.Bool        `db:"is_verified" json:"is_verified"`
	CreatedAt    pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}
