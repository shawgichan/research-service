// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	BlockSession(ctx context.Context, id pgtype.UUID) (Session, error)
	CreateChapter(ctx context.Context, arg CreateChapterParams) (Chapter, error)
	CreateGeneratedDocument(ctx context.Context, arg CreateGeneratedDocumentParams) (GeneratedDocument, error)
	CreateReference(ctx context.Context, arg CreateReferenceParams) (Reference, error)
	CreateResearchProject(ctx context.Context, arg CreateResearchProjectParams) (ResearchProject, error)
	// Ensure user owns project for delete if needed, or handled at service layer
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteChapter(ctx context.Context, arg DeleteChapterParams) error
	DeleteGeneratedDocument(ctx context.Context, id pgtype.UUID) error
	DeleteReference(ctx context.Context, arg DeleteReferenceParams) error
	DeleteResearchProject(ctx context.Context, arg DeleteResearchProjectParams) error
	DeleteSessionByRefreshToken(ctx context.Context, refreshToken string) error
	GetChapterByID(ctx context.Context, id pgtype.UUID) (Chapter, error)
	GetChapterByProjectIDAndType(ctx context.Context, arg GetChapterByProjectIDAndTypeParams) (Chapter, error)
	GetChaptersByProjectID(ctx context.Context, projectID pgtype.UUID) ([]Chapter, error)
	GetGeneratedDocumentByID(ctx context.Context, id pgtype.UUID) (GeneratedDocument, error)
	GetGeneratedDocumentsByProjectID(ctx context.Context, projectID pgtype.UUID) ([]GeneratedDocument, error)
	GetReferencesByProjectID(ctx context.Context, projectID pgtype.UUID) ([]Reference, error)
	GetResearchProjectByID(ctx context.Context, arg GetResearchProjectByIDParams) (ResearchProject, error)
	GetSessionByRefreshToken(ctx context.Context, refreshToken string) (Session, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id pgtype.UUID) (User, error)
	GetUserResearchProjects(ctx context.Context, userID pgtype.UUID) ([]ResearchProject, error)
	UpdateChapter(ctx context.Context, arg UpdateChapterParams) (Chapter, error)
	UpdateGeneratedDocument(ctx context.Context, arg UpdateGeneratedDocumentParams) (GeneratedDocument, error)
	UpdateGeneratedDocumentStatus(ctx context.Context, arg UpdateGeneratedDocumentStatusParams) (GeneratedDocument, error)
	UpdateResearchProject(ctx context.Context, arg UpdateResearchProjectParams) (ResearchProject, error)
	UpdateResearchProjectStatus(ctx context.Context, arg UpdateResearchProjectStatusParams) (ResearchProject, error)
	UpdateUserVerificationStatus(ctx context.Context, arg UpdateUserVerificationStatusParams) (User, error)
}

var _ Querier = (*Queries)(nil)
